{
	"info": {
		"_postman_id": "fc475544-f4ce-40e7-8c75-b4f4c1388e12",
		"name": "Team7_Dietician_Phase1APIHackathon_2024",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28096390",
		"_collection_link": "https://postman-geeks-6315.postman.co/workspace/Team7_Dietician_Phase1APIHackat~68a54a3c-24f0-468f-a13f-3a4f28686c5b/collection/28096390-fc475544-f4ce-40e7-8c75-b4f4c1388e12?action=share&source=collection_link&creator=28096390"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "User login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var JsonData = pm.response.json();\r",
									"var AdminBearer_Token = JsonData.token;\r",
									"pm.environment.set(\"AdminBearer_Token\", AdminBearer_Token );\r",
									"\r",
									"pm.test(\"Validating Status Code\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));\r",
									"});\r",
									"\r",
									"const jsonSchema={\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"loginUserEmail\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"roles\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"token\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userId\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"loginUserEmail\",\r",
									"    \"roles\",\r",
									"    \"token\",\r",
									"    \"type\",\r",
									"    \"userId\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify JSON Schema\",function() {\r",
									"    if(pm.response.code == 200) {\r",
									"        pm.response.to.have.jsonSchema(jsonSchema);\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Schema Data\", function () {\r",
									"    if(pm.response.code == 200) {\r",
									"       var jsonData = pm.response.json();\r",
									"       var roles = jsonData.roles;\r",
									"       pm.expect(roles.includes(\"ROLE_ADMIN\")).to.be.true;\r",
									"       pm.expect(jsonData.type).to.eql(\"Bearer\");\r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{user_password}}\",\r\n  \"userLoginEmail\":\"{{user_LoginEmail}}\"\r\n}\r\n\r\n  ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGOUT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.expect(pm.response.text()).to.include(\"Logout successful\");\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Validating Status Code\", ()=> {\r",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "BearerToken",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dietician",
			"item": [
				{
					"name": "CreateDietician",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var JsonData = pm.response.json();\r",
									"var Dietician_Email = JsonData.Email;\r",
									"var Dietician_Login_Password=JsonData.loginPassword;\r",
									"pm.environment.set(\"Dietician_Email\", Dietician_Email );\r",
									"pm.environment.set(\"Dietician_Login_Password\",Dietician_Login_Password);\r",
									"var Dietician_Id=JsonData.id;\r",
									"pm.environment.set(\"Dietician_Id\",Dietician_Id);\r",
									"\r",
									"// pm.test(\"Verify Status code is 201\", function () {\r",
									"//     pm.response.to.have.status(201);\r",
									"// });\r",
									"//  const expectedJSONSchema={\r",
									"//     \"type\": \"object\",\r",
									"//   \"properties\": {\r",
									"//     \"id\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"loginPassword\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"Firstname\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"Lastname\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"ContactNumber\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"DateOfBirth\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"Email\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"HospitalName\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"HospitalStreet\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"HospitalCity\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"HospitalPincode\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"Education\": {\r",
									"//       \"type\": \"string\"\r",
									"//     }\r",
									"//   },\r",
									"//   \"required\": [\r",
									"//     \"id\",\r",
									"//     \"loginPassword\",\r",
									"//     \"Firstname\",\r",
									"//     \"Lastname\",\r",
									"//     \"ContactNumber\",\r",
									"//     \"DateOfBirth\",\r",
									"//     \"Email\",\r",
									"//     \"HospitalName\",\r",
									"//     \"HospitalStreet\",\r",
									"//     \"HospitalCity\",\r",
									"//     \"HospitalPincode\",\r",
									"//     \"Education\"\r",
									"//   ]\r",
									"// };\r",
									"// pm.test(\"Verify JSON Schema\",function(){\r",
									"//     pm.response.to.have.jsonSchema(expectedJSONSchema)\r",
									"// })\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n    {\r\n    \"ContactNumber\": \"9999999967\",\r\n    \"DateOfBirth\": \"1921-07-26T18:14:08.570Z\",\r\n    \"Education\": \"BBDS\",\r\n    \"Email\": \"Dieticiancreation144@gmail.com\",\r\n    \"Firstname\": \"Gopi\",\r\n    \"HospitalCity\": \"jersey\",\r\n    \"HospitalName\": \"Hackensack\",\r\n    \"HospitalPincode\": \"073061\",\r\n    \"HospitalStreet\": \"elm\",\r\n    \"Lastname\": \"ven\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}dietician",
							"host": [
								"{{BaseURL}}dietician"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dietician Bearer Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var JsonData = pm.response.json();\r",
									"var DieticianBearer_Token = JsonData.token;\r",
									"pm.environment.set(\"DieticianBearer_Token\", DieticianBearer_Token );"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Grow22\",\r\n  \"userLoginEmail\": \"Dieticiancreation144@gmail.com\"\r\n}\r\n\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}login",
							"host": [
								"{{BaseURL}}login"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateDietician Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var JsonData = pm.response.json();\r",
									"var Dietician_Email = JsonData.Email;\r",
									"var Dietician_Login_Password=JsonData.loginPassword;\r",
									"pm.environment.set(\"Dietician_Email\", Dietician_Email );\r",
									"pm.environment.set(\"Dietician_Login_Password\",Dietician_Login_Password);\r",
									"var Dietician_Id=JsonData.id;\r",
									"pm.environment.set(\"Dietician_Id\",Dietician_Id);\r",
									"\r",
									"//pm.test(\"Verify Status code is 201\", function () {\r",
									"   // pm.response.to.have.status(201);\r",
									"//});\r",
									"pm.test(\"Validating Status Code\", ()=> {\r",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));\r",
									"});\r",
									" const expectedJSONSchema={\r",
									"    \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"loginPassword\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Firstname\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Lastname\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"ContactNumber\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"DateOfBirth\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Email\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"HospitalName\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"HospitalStreet\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"HospitalCity\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"HospitalPincode\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Education\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"loginPassword\",\r",
									"    \"Firstname\",\r",
									"    \"Lastname\",\r",
									"    \"ContactNumber\",\r",
									"    \"DateOfBirth\",\r",
									"    \"Email\",\r",
									"    \"HospitalName\",\r",
									"    \"HospitalStreet\",\r",
									"    \"HospitalCity\",\r",
									"    \"HospitalPincode\",\r",
									"    \"Education\"\r",
									"  ]\r",
									"};\r",
									"pm.test(\"Verify JSON Schema\",function(){\r",
									"    pm.response.to.have.jsonSchema(expectedJSONSchema)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"ContactNumber\": \"{{ContactNumber}}\",\r\n    \"DateOfBirth\": \"{{DateOfBirth}}\",\r\n    \"Education\": \"{{Education}}\",\r\n    \"Email\": \"{{Email}}\",\r\n    \"Firstname\": \"{{Firstname}}\",\r\n    \"HospitalCity\": \"{{HospitalCity}}\",\r\n    \"HospitalName\": \"{{HospitalName}}\",\r\n    \"HospitalPincode\": \"{{HospitalPincode}}\",\r\n    \"HospitalStreet\": \"{{HospitalStreet}}\",\r\n    \"Lastname\": \"{{Lastname}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/dietician",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"dietician"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Dietician_BY_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate response against saved 'Firstname' value\", function() {\r",
									"     \r",
									"    var jsonData = pm.response.json();\r",
									"    var responseFirstName = jsonData.Firstname;\r",
									"    \r",
									"    pm.expect(responseFirstName).to.eql(\"Gopi\");\r",
									"\r",
									"});\r",
									"pm.test(\"Validate response against saved 'Firstname' value\", function() {\r",
									"     \r",
									"    var jsonData = pm.response.json();\r",
									"    var responseLastName = jsonData.Lastname;\r",
									"    \r",
									"    pm.expect(responseLastName).to.eql(\"ven\");\r",
									"    \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/dietician/{{Dietician_Id}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"dietician",
								"{{Dietician_Id}}"
							],
							"query": [
								{
									"key": "dieticianId",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Dieticians",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"pm.test(\"Verify Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var data = pm.response.json();\r",
									"\r",
									"//pm.test('Number of users returned = ' + data.length);\r",
									"console.log('Number of dieticians returned = ' + data.length );\r",
									"*/"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}dietician",
							"host": [
								"{{BaseURL}}dietician"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateDietician_BY_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Validate response against saved 'Firstname' value\", function() {\r",
									"     \r",
									"    var jsonData = pm.response.json();\r",
									"    var responseFirstName = jsonData.Firstname;\r",
									"    \r",
									"    pm.expect(responseFirstName).to.eql(\"Gopi\");\r",
									"\r",
									"});\r",
									"pm.test(\"Validate response against saved 'updated HospitalName' value\", function() {\r",
									"     \r",
									"    var jsonData = pm.response.json();\r",
									"    var responseHospitalName = jsonData.HospitalName;\r",
									"    \r",
									"    pm.expect(responseHospitalName).to.eql(\"NorthBergen\");\r",
									"    \r",
									"});\r",
									"pm.test(\"Validate response against saved 'HospitalPincode' value\", function() {\r",
									"     \r",
									"    var jsonData = pm.response.json();\r",
									"    var responseHospitalPincode = jsonData.HospitalPincode;\r",
									"    \r",
									"    pm.expect(responseHospitalPincode).to.eql(\"073062\");\r",
									"    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"9998288077\",\r\n  \"DateOfBirth\": \"1989-07-26T18:14:08.570Z\",\r\n  \"Education\": \"BBDS\",\r\n  \"Email\": \"Dieticiancreation6202@gmail.com\",\r\n  \"Firstname\": \"Gopi\",\r\n  \"HospitalCity\": \"jersey\",\r\n  \"HospitalName\": \"NorthBergen\",\r\n  \"HospitalPincode\": \"073062\",\r\n  \"HospitalStreet\": \"elm\",\r\n  \"Lastname\": \"ven\"\r\n \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/dietician/{{Dietician_Id}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"dietician",
								"{{Dietician_Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Dietician_BY_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"// Get the response body\r",
									"var responseBody = pm.response.text();\r",
									"\r",
									"// Check if the response body contains the expected text\r",
									"pm.test(\"Response body contains expected text\", function () {\r",
									"    pm.expect(responseBody).to.contains(\"Deleted dietician \")\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/dietician/1396",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"dietician",
								"1396"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Patient",
			"item": [
				{
					"name": "Create Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.environment.set(\"patientId\",response.patientId);",
									"pm.test(\"Validating Status Code\", ()=> {",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));",
									"});",
									"const jsonSchema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"patientId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"FirstName\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"LastName\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"ContactNumber\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"Email\": {",
									"      \"type\": \"string\",",
									"      \"format\": \"email\"",
									"    },",
									"    \"Allergy\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"FoodPreference\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"CuisineCategory\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"FileMorbidity\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"66ad4e104717cf471aaad141\": {",
									"          \"type\": \"object\",",
									"          \"properties\": {",
									"            \"T4\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"TSH\": {",
									"              \"type\": \"string\"",
									"            }",
									"          }",
									"           ",
									"        }",
									"      }",
									"       ",
									"    },",
									"    \"FileMorbidityCondition\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"66ad4e104717cf471aaad141\": {",
									"          \"type\": \"string\"",
									"        }",
									"      }",
									"    },",
									"    \"DateOfBirth\": {",
									"      \"type\": \"string\",",
									"      \"format\": \"date\"",
									"    },",
									"    \"DieticianId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"Vitals\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"66ad4e104717cf471aaad141\": {",
									"          \"type\": \"object\",",
									"          \"properties\": {",
									"            \"Weight\": {",
									"              \"type\": \"integer\"",
									"            },",
									"            \"Height\": {",
									"              \"type\": \"integer\"",
									"            },",
									"            \"Temperature\": {",
									"              \"type\": \"integer\"",
									"            },",
									"            \"SP\": {",
									"              \"type\": \"integer\"",
									"            },",
									"            \"DP\": {",
									"              \"type\": \"integer\"",
									"            }",
									"          }",
									"           ",
									"        }",
									"      }",
									"      ",
									"    },",
									"    \"LastVisitDate\": {",
									"      \"type\": \"string\",",
									"      \"format\": \"date-time\"",
									"    }",
									"  }",
									"   ",
									"}",
									"pm.test(\"Verify JSON Schema\",function(){",
									"    pm.response.to.have.jsonSchema(jsonSchema)",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1ef50cc9-f80e-45f0-b1d1-866c01f86e3e"
								},
								{
									"key": "patientInfo",
									"value": "{ \n\"FirstName\": \"{{p_FirstName}}\",\n\"LastName\": \"{{p_Lastname}}\",\n\"ContactNumber\": \"{{p_ContactNumber}}\",\n\"Email\": \"{{p_Email}}\",\n\"Allergy\": \"{{p_Allergy}}\",\n\"FoodPreference\": \"{{p_FoodPreferences}}\",\n\"CuisineCategory\":\"{{p_CuisineCatergory}}\",\n\"DateOfBirth\": \"{{p_DateOfBirth}}\"\n}\n\n",
									"contentType": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Reports For Existing Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.environment.set(\"patientId\",response.patientId);",
									"pm.test(\"Validating Status Code\", ()=> {",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));",
									"});",
									"const jsonSchema = {",
									"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
									"    \"$ref\": \"#/definitions/Welcome4\",",
									"    \"definitions\": {",
									"        \"Welcome4\": {",
									"            \"type\": \"object\",",
									"            \"additionalProperties\": false,",
									"            \"properties\": {",
									"                \"patientId\": {",
									"                    \"type\": \"integer\"",
									"                },",
									"                \"FirstName\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"LastName\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"ContactNumber\": {",
									"                    \"type\": \"string\",",
									"                    \"format\": \"integer\"",
									"                },",
									"                \"Email\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"Allergy\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"FoodPreference\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"CuisineCategory\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"FileMorbidity\": {",
									"                    \"$ref\": \"#/definitions/FileMorbidity\"",
									"                },",
									"                \"FileMorbidityCondition\": {",
									"                    \"$ref\": \"#/definitions/FileMorbidityCondition\"",
									"                },",
									"                \"DateOfBirth\": {",
									"                    \"type\": \"string\",",
									"                    \"format\": \"date\"",
									"                },",
									"                \"DieticianId\": {",
									"                    \"type\": \"integer\"",
									"                },",
									"                \"Vitals\": {",
									"                    \"$ref\": \"#/definitions/Vitals\"",
									"                },",
									"                \"LastVisitDate\": {",
									"                    \"type\": \"string\",",
									"                    \"format\": \"date-time\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"Allergy\",",
									"                \"ContactNumber\",",
									"                \"CuisineCategory\",",
									"                \"DateOfBirth\",",
									"                \"DieticianId\",",
									"                \"Email\",",
									"                \"FileMorbidity\",",
									"                \"FileMorbidityCondition\",",
									"                \"FirstName\",",
									"                \"FoodPreference\",",
									"                \"LastName\",",
									"                \"LastVisitDate\",",
									"                \"Vitals\",",
									"                \"patientId\"",
									"            ],",
									"            \"title\": \"Welcome4\"",
									"        },",
									"        \"FileMorbidity\": {",
									"            \"type\": \"object\",",
									"            \"additionalProperties\": false,",
									"            \"properties\": {",
									"                \"66ad4bf84717cf471aaad133\": {",
									"                    \"$ref\": \"#/definitions/FileMorbidity66Ad4Bf84717Cf471Aaad133\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"66ad4bf84717cf471aaad133\"",
									"            ],",
									"            \"title\": \"FileMorbidity\"",
									"        },",
									"        \"FileMorbidity66Ad4Bf84717Cf471Aaad133\": {",
									"            \"type\": \"object\",",
									"            \"additionalProperties\": false,",
									"            \"properties\": {",
									"                \"T4\": {",
									"                    \"type\": \"string\"",
									"                },",
									"                \"TSH\": {",
									"                    \"type\": \"string\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"T4\",",
									"                \"TSH\"",
									"            ],",
									"            \"title\": \"FileMorbidity66Ad4Bf84717Cf471Aaad133\"",
									"        },",
									"        \"FileMorbidityCondition\": {",
									"            \"type\": \"object\",",
									"            \"additionalProperties\": false,",
									"            \"properties\": {",
									"                \"66ad4bf84717cf471aaad133\": {",
									"                    \"type\": \"string\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"66ad4bf84717cf471aaad133\"",
									"            ],",
									"            \"title\": \"FileMorbidityCondition\"",
									"        },",
									"        \"Vitals\": {",
									"            \"type\": \"object\",",
									"            \"additionalProperties\": false,",
									"            \"properties\": {",
									"                \"66ad4bf84717cf471aaad133\": {",
									"                    \"$ref\": \"#/definitions/Vitals66Ad4Bf84717Cf471Aaad133\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"66ad4bf84717cf471aaad133\"",
									"            ],",
									"            \"title\": \"Vitals\"",
									"        },",
									"        \"Vitals66Ad4Bf84717Cf471Aaad133\": {",
									"            \"type\": \"object\",",
									"            \"additionalProperties\": false,",
									"            \"properties\": {",
									"                \"Weight\": {",
									"                    \"type\": \"number\"",
									"                },",
									"                \"Height\": {",
									"                    \"type\": \"number\"",
									"                },",
									"                \"Temperature\": {",
									"                    \"type\": \"number\"",
									"                },",
									"                \"SP\": {",
									"                    \"type\": \"integer\"",
									"                },",
									"                \"DP\": {",
									"                    \"type\": \"integer\"",
									"                }",
									"            },",
									"            \"required\": [",
									"                \"DP\",",
									"                \"Height\",",
									"                \"SP\",",
									"                \"Temperature\",",
									"                \"Weight\"",
									"            ],",
									"            \"title\": \"Vitals66Ad4Bf84717Cf471Aaad133\"",
									"        }",
									"    }",
									"}",
									"",
									"",
									"pm.test(\"Verify JSON Schema\",function(){",
									"    pm.response.to.have.jsonSchema(jsonSchema)",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1ef50cc9-f80e-45f0-b1d1-866c01f86e3e"
								},
								{
									"key": "patientInfo",
									"value": "{ \n\"FirstName\": \"{{p_FirstName}}\",\n\"LastName\": \"{{p_Lastname}}\",\n\"ContactNumber\": \"{{p_ContactNumber}}\",\n\"Email\": \"{{p_Email}}\",\n\"Allergy\": \"{{p_Allergy}}\",\n\"FoodPreference\": \"{{p_FoodPreferences}}\",\n\"CuisineCategory\":\"{{p_CuisineCatergory}}\",\n\"DateOfBirth\": \"{{p_DateOfBirth}}\"\n}\n\n",
									"contentType": "",
									"type": "text"
								},
								{
									"key": "vitals",
									"value": "{  “Weight“ : {{Weight}},“Height” : {{Height}},“Temperature” : {{Temperature}},“SP” : {{SP}},“DP” : {{DP}}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}/{{patientId}}",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							],
							"path": [
								"{{patientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test(\"Validating Status Code\", ()=> {",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"value": "{\n\"FirstName\": \"{{updateFirstName}}\",\n\"LastName\": \"{{updateLastName}}\",\n\"ContactNumber\": \"{{updateContactNumber}}\",\n\"Email\": \"{{updateEmail}}\",\n\"Allergy\": \"{{updateAllergy}}\",\n\"FoodPreference\": \"{{updateFoodPreference}}\",\n\"CuisineCategory\": \"{{updateCuisineCategory}}\",\n\"DateOfBirth\": \"{{updateDateOfBirth}}\"\n}",
									"type": "text"
								},
								{
									"key": "",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}/347",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							],
							"path": [
								"347"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patients Morbidity Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.environment.set(\"fileId\",response[0].fileId);",
									"pm.test(\"Validating Status Code\", ()=> {",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}/{{patientId}}",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							],
							"path": [
								"{{patientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET All Patients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test(\"Validating Status Code\", ()=> {",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get patient file by FileId",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/patient/testReports/347",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"patient",
								"testReports",
								"347"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete by patient id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.code;",
									"pm.test(\"StatusCode Validation\",()=>{",
									"    pm.expect(response).to.eql(pm.variables.get(\"statusCode\"));",
									"});",
									"pm.test(\"Delete Validation\", ()=>{",
									"       const responseData = pm.response.text();",
									"         pm.expect(pm.response.text()).to.be.a(\"string\");",
									"         console.log(responseData);",
									"    });",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}/{{patientId}}",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							],
							"path": [
								"{{patientId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Morbidity",
			"item": [
				{
					"name": "Get all Morbidities by DieticianBearer_Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Validating Status Code\", ()=> {\r",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));\r",
									"});\r",
									"\r",
									" const jsonSchema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"morbidityId\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMaxVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMinVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityNameRegex\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestName\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestUnit\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"morbidityId\",\r",
									"        \"morbidityMarkerMaxVal\",\r",
									"        \"morbidityMarkerMinVal\",\r",
									"        \"morbidityNameRegex\",\r",
									"        \"morbidityTestId\",\r",
									"        \"morbidityTestName\",\r",
									"        \"morbidityTestUnit\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									" };\r",
									"\r",
									"pm.test(\"Verify JSON Schema\",function() {\r",
									"    if(pm.response.code == 200) {\r",
									"        pm.response.to.have.jsonSchema(jsonSchema);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "BearerToken",
								"value": "{{AdminBearer_Token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Morbidities by Admin_Bearer _Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Validating Status Code\", ()=> {\r",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));\r",
									"});\r",
									"\r",
									"const jsonSchema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"morbidityId\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMaxVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMinVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityNameRegex\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestName\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestUnit\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"morbidityId\",\r",
									"        \"morbidityMarkerMaxVal\",\r",
									"        \"morbidityMarkerMinVal\",\r",
									"        \"morbidityNameRegex\",\r",
									"        \"morbidityTestId\",\r",
									"        \"morbidityTestName\",\r",
									"        \"morbidityTestUnit\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									" };\r",
									"   \r",
									"pm.test(\"Verify JSON Schema\",function() {\r",
									"    if(pm.response.code == 200) {\r",
									"        pm.response.to.have.jsonSchema(jsonSchema);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AdminBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "BearerToken",
								"value": "{{AdminBearer_Token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}{{Endpoint}}",
							"host": [
								"{{BaseURL}}{{Endpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity Condition By Glucose Test Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.test(\"Validating Status Code\", ()=> {\r",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));\r",
									"});\r",
									"\r",
									"const jsonSchema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": {\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"      \"morbidityId\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"morbidityMarkerMaxVal\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"morbidityMarkerMinVal\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"morbidityNameRegex\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"morbidityTestId\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"morbidityTestName\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"morbidityTestUnit\": {\r",
									"        \"type\": \"string\"\r",
									"      }\r",
									"    },\r",
									"    \"required\": [\r",
									"      \"morbidityId\",\r",
									"      \"morbidityMarkerMaxVal\",\r",
									"      \"morbidityMarkerMinVal\",\r",
									"      \"morbidityNameRegex\",\r",
									"      \"morbidityTestId\",\r",
									"      \"morbidityTestName\",\r",
									"      \"morbidityTestUnit\"\r",
									"    ]\r",
									"  }\r",
									" };\r",
									"\r",
									"if(pm.response.code == 200) {  \r",
									"    pm.test(\"Verify JSON Schema\",function() {\r",
									"        pm.response.to.have.jsonSchema(jsonSchema); \r",
									"    });\r",
									"    \r",
									"    const morbidityName = response[0].morbidityTestName;\r",
									"    if(morbidityName === \"Fasting Glucose\") {\r",
									"        pm.test(\"Verify Morbidity Marker Value\", function () {\r",
									"            var jsonData = pm.response.json();\r",
									"            jsonData.forEach(function(object) {\r",
									"                pm.expect(object.morbidityMarkerMaxVal).to.be.above(object.morbidityMarkerMinVal);\r",
									"                pm.expect(object.morbidityTestUnit).to.eql(\"mg/dL\");\r",
									"            });\r",
									"        });\r",
									"    }\r",
									"     \r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "BearerToken",
								"value": "{{AdminBearer_Token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{BaseURL}}morbidity/Fasting Glucose",
							"host": [
								"{{BaseURL}}morbidity"
							],
							"path": [
								"Fasting Glucose"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity Condition By TSH Test Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"Validating Status Code\", ()=> {\r",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));\r",
									"});\r",
									"\r",
									"const jsonSchema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"morbidityId\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMaxVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMinVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityNameRegex\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestName\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestUnit\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"morbidityId\",\r",
									"        \"morbidityMarkerMaxVal\",\r",
									"        \"morbidityMarkerMinVal\",\r",
									"        \"morbidityNameRegex\",\r",
									"        \"morbidityTestId\",\r",
									"        \"morbidityTestName\",\r",
									"        \"morbidityTestUnit\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									" };\r",
									"\r",
									"if(pm.response.code == 200) {  \r",
									"pm.test(\"Verify JSON Schema\",function() {\r",
									"    pm.response.to.have.jsonSchema(jsonSchema);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Verify Morbidity Marker Value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.forEach(function(object) {\r",
									"        pm.expect(object.morbidityMarkerMaxVal).to.be.above(object.morbidityMarkerMinVal);\r",
									"        pm.expect(object.morbidityTestUnit).to.eql(\"μIU/ml\");\r",
									"        pm.expect(object.morbidityMarkerMaxVal).to.eql(4.78);\r",
									"        pm.expect(object.morbidityMarkerMinVal).to.eql(0.55);\r",
									"    });\r",
									"});\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "BearerToken",
								"value": "{{AdminBearer_Token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{BaseURL}}morbidity/TSH",
							"host": [
								"{{BaseURL}}morbidity"
							],
							"path": [
								"TSH"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity Condition By T3 Test Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"Validating Status Code\", ()=> {\r",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));\r",
									"});\r",
									"\r",
									"const jsonSchema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"morbidityId\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMaxVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMinVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityNameRegex\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestName\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestUnit\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"morbidityId\",\r",
									"        \"morbidityMarkerMaxVal\",\r",
									"        \"morbidityMarkerMinVal\",\r",
									"        \"morbidityNameRegex\",\r",
									"        \"morbidityTestId\",\r",
									"        \"morbidityTestName\",\r",
									"        \"morbidityTestUnit\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									" };\r",
									"\r",
									"if(pm.response.code == 200) {  \r",
									"pm.test(\"Verify JSON Schema\",function() {\r",
									"    pm.response.to.have.jsonSchema(jsonSchema);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Verify Morbidity Marker Value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.forEach(function(object) {\r",
									"        pm.expect(object.morbidityMarkerMaxVal).to.be.above(object.morbidityMarkerMinVal);\r",
									"        pm.expect(object.morbidityTestUnit).to.eql(\"ng/dL\");\r",
									"        pm.expect(object.morbidityMarkerMaxVal).to.eql(180);\r",
									"        pm.expect(object.morbidityMarkerMinVal).to.eql(60);\r",
									"    });\r",
									"});\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "BearerToken",
								"value": "{{AdminBearer_Token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{BaseURL}}morbidity/{{morbidityName}}",
							"host": [
								"{{BaseURL}}morbidity"
							],
							"path": [
								"{{morbidityName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity Condition By T4 Test Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"Validating Status Code\", ()=> {\r",
									"    pm.expect(pm.response.code).to.eql(pm.variables.get(\"statusCode\"));\r",
									"});\r",
									"\r",
									"const jsonSchema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"morbidityId\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMaxVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityMarkerMinVal\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"morbidityNameRegex\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestId\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestName\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"morbidityTestUnit\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"morbidityId\",\r",
									"        \"morbidityMarkerMaxVal\",\r",
									"        \"morbidityMarkerMinVal\",\r",
									"        \"morbidityNameRegex\",\r",
									"        \"morbidityTestId\",\r",
									"        \"morbidityTestName\",\r",
									"        \"morbidityTestUnit\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									" };\r",
									"\r",
									"if(pm.response.code == 200) {  \r",
									"pm.test(\"Verify JSON Schema\",function() {\r",
									"    pm.response.to.have.jsonSchema(jsonSchema); \r",
									"});\r",
									"\r",
									"pm.test(\"Verify Morbidity Marker Value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.forEach(function(object) {\r",
									"        pm.expect(object.morbidityMarkerMaxVal).to.be.above(object.morbidityMarkerMinVal);\r",
									"        pm.expect(object.morbidityTestUnit).to.eql(\"μg/dL\");\r",
									"        pm.expect(object.morbidityMarkerMaxVal).to.eql(12);\r",
									"        pm.expect(object.morbidityMarkerMinVal).to.eql(5);\r",
									"    });\r",
									"});\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{DieticianBearer_Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "BearerToken",
								"value": "{{AdminBearer_Token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{BaseURL}}morbidity/T4",
							"host": [
								"{{BaseURL}}morbidity"
							],
							"path": [
								"T4"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"if (typeof pm.variables.get('requestdata') !== 'object') {",
					"    pm.variables.set('requestdata', pm.iterationData.toObject());",
					"}",
					"const requestdata = pm.variables.get('requestdata');",
					"",
					"if(typeof requestdata !== 'object' || Object.keys(requestdata).length ===0) {",
					"    console.log(\"No external file found\")",
					"    return;",
					"}",
					"",
					"const currentrequest = requestdata.requests.filter(({name}) => name === pm.info.requestName) [0];",
					"if(!currentrequest){",
					"    console.log(`Request ${pm.info.requestName} has no data defined.`);",
					"}",
					"",
					"const variables = currentrequest.data.shift();",
					"",
					"Object.entries(variables).forEach(([key, value]) => {",
					"        pm.variables.set(key, value);",
					"    });",
					"",
					"pm.variables.set('requestdata',requestdata);",
					"if(currentrequest.data.length > 0){",
					"    pm.execution.setNextRequest(pm.info.requestName)",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "InvalidDietician_Id",
			"value": "711",
			"type": "string"
		}
	]
}